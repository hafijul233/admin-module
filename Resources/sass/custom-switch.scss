@import "~bootstrap/scss/functions";
@import "~bootstrap/scss/variables";
@import "~bootstrap/scss/mixins";

$switch-unit: px;
$switch-width: 68;
$switch-width-sm: 60;
$switch-width-xs: 48;
$switch-width-status: 96;
$switch-width-status-sm: 88;
$switch-width-status-xs: 76;
$switch-height: 38; // The default Bootstrap btn height in px
$switch-height-sm: 31; // The default Bootstrap small btn height in px
$switch-height-xs: 24; // Extra small btn height in px
$switch-font-size: 12;
$switch-font-size-sm: 11;
$switch-font-size-xs: 10;
$switch-font-family: $font-family-sans-serif;
$switch-duration: 150ms;
$switch-required-color: $danger;
$switch-invalid-color: $form-feedback-invalid-color;

$switch-checked-color: $white;
$switch-checked-bg: $green;
$switch-checked-disabled-opacity: .4;
$switch-checked-text-yesno: "Yes";

$switch-unchecked-color: $white;
$switch-unchecked-bg: $gray-500;
$switch-unchecked-disabled-opacity: .6;
$switch-unchecked-text-yesno: "No";

.custom-switch {
    line-height: ($switch-font-size + $switch-unit);

    &.custom-switch-label-yesno {
        .custom-switch-input {
            + .custom-switch-btn {
                :after {
                    content: $switch-unchecked-text-yesno;
                }
            }

            &:checked + .custom-switch-btn {
                :before {
                    content: $switch-checked-text-yesno;
                }
            }
        }
    }

    .custom-switch-input {
        position: absolute;
        z-index: -1;
        opacity: 0;

        &,
        &:after,
        &:before,
        & *,
        & *:after,
        & *:before,
        & + .custom-switch-btn {
            box-sizing: border-box;

            &::selection {
                background: none;
            }
        }

        + .custom-switch-btn {
            outline: 0;
            display: inline-block;
            position: relative;
            user-select: none;
            cursor: pointer;
            width: ($switch-width + $switch-unit);
            height: ($switch-height + $switch-unit);
            margin: 0;
            padding: ((round(($switch-height - (round($switch-height * .75))) / 2) - 1) + $switch-unit);
            background: $switch-unchecked-bg;
            border-radius: (($switch-height * 2) + $switch-unit);
            transition: all $switch-duration ease;

            &:after,
            &:before {
                position: relative;
                display: block;
                content: "";
                width: (round($switch-height * .75) + $switch-unit);
                height: (round($switch-height * .75) + $switch-unit);
            }

            &:after {
                left: ((round(($switch-height - (round($switch-height * .75))) / 2) - 3) + $switch-unit);
                border-radius: 50%;
                background: white;
                transition: all $switch-duration ease;
            }

            &:before {
                display: none;
            }

            &.text-hide {
                top: -.80rem;
            }
        }

        &:checked + .custom-switch-btn {
            background: $switch-checked-bg;

            &:after {
                left: (($switch-width - $switch-height) + $switch-unit);
            }

            ~ .custom-switch-content-checked {
                opacity: 1;
                height: auto;
            }

            ~ .custom-switch-content-unchecked {
                display: none;
                opacity: 0;
                height: 0;
            }
        }

        &:not(:checked) + .custom-switch-btn {
            ~ .custom-switch-content-checked {
                display: none;
                opacity: 0;
                height: 0;
            }

            ~ .custom-switch-content-unchecked {
                opacity: 1;
                height: auto;
            }
        }

        &[disabled] {
            + .custom-switch-btn {
                background: rgba($switch-unchecked-bg, $switch-unchecked-disabled-opacity);
                cursor: default;
            }

            &:checked + .custom-switch-btn {
                background: rgba($switch-checked-bg, $switch-checked-disabled-opacity);
            }
        }

        &:not([disabled]) {
            &:focus {
                ~ .custom-switch-btn {
                    box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 0 .25rem rgba(56, 123, 189, .25);
                }
            }
        }

        &[required] {
            ~ .custom-switch-btn {
                box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 0 .125rem rgba($switch-required-color, .5);
            }
        }
    }

    .custom-switch-form-text {
        display: inline-block;
        height: ($switch-height + $switch-unit);
        margin-left: .5rem;
        line-height: ($switch-height + $switch-unit);
        vertical-align: top;
    }

    @each $color, $value in $theme-colors {
        &.custom-switch-#{$color} {
            .custom-switch-input {
                &:checked + .custom-switch-btn {
                    background-color: $value !important;
                }

                &[disabled] {
                    &:checked + .custom-switch-btn {
                        background: rgba($value, $switch-checked-disabled-opacity);
                    }
                }
            }
        }
    }
}

// Validation

.is-invalid .custom-switch .custom-switch-input ~ .custom-switch-btn,
.was-validated .custom-switch:invalid .custom-switch-input ~ .custom-switch-btn {
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 0 .25rem rgba($danger, 1);
}
